// Installation
1. Install R: https://cran.r-project.org/
2. Install RStudio: https://www.rstudio.com/products/rstudio/download/
3. Install RTools: https://cran.r-project.org/bin/windows/Rtools/

4. Install Devtools in RStudio: install.packages("devtools")
5. Load Devtools: library(devtools)
6. find_rtools() // should return TRUE now

7. Install StringR in RStudio: install.packages("stringr")
8. Load StringR: library(stringr)

// Install swirl
install.packages("swirl")
packageVersion("swirl")
library(swirl)

// Install swirl course
install_from_swirl("R Programming")
swirl()

// Glossar

inference // Folgerung (from a small sample to a big population)
confound  // verwechseln


// Functions:

getwd()
ls()
dir() or list.files()
source("filename.R") // load source file
read.table("filename.txt") // for small and mid-size files
read.csv("filename.txt")
args(functionname) // help for arguments of a function
file.create("filename.R") // create file
dir.create("dirname") // create directory
setwd("dirname") //change working directory
file.exists("filename.R") // file exists
file.info("filename.R") // file info
file.info("filename.R")$mode // specific file info
file.rename(from = "filename1.R", to = "filename2.R") // file rename
file.copy(from = "filename1.R", to = "filename2.R") // file copy
file.path("filename.R") // file path
dir.create(recursive = TRUE, path = file.path("folder1", "folder2")) // create file path
dput() // serialize
dget() // de-serialize
dump() // de-serialize for multiple objects
source() // de-serialize for multiple objects
readLines(con, 10)

// Help for funtions
?functionname

// Comment
# This is a comment

// Assignment
x <- 1  // numeric (real number)
x <- 1L // integer

// Output
print(x) // or
x

// Output datatype
class(x)

// Function definition
myfunction <- function(x, y) 
{
    x + y
}

// Int sequence
x <- 1:20

// Vector
x <- c(0.5, 0.6) // concatenate or combine
x <- vector("numeric", length = 10)

// Convert object
as.numeric(x)
as.logical(x)
as.character(x)

// List
x <- list(1, "a", TRUE, 1 + 4i)

// Matrix
m <- matrix(nrow = 2, ncol = 3)
m <- matrix(1:6, nrow = 2, ncol = 3)

m <- 1:10
dim(m) <- c(2,5)

dim(m)
attributes(m)

x <- 1:3
y <- 10:12
cbind(x, y)
rbind(x, y)

// Factor
x <- factor(c("yes", "yes", "no", "yes", "no")) // enum like
table(x)
unclass(x) // as number
x <- factor(c("yes", "yes", "no", "yes", "no"), levels = c("yes", "no")) // first "yes", second "no"

// NA and NaN
NaN is a NA
NA is not necessarily a NaN

// Data Frame
x <- data.frame(foo = 1:4, bar = c(T, T, F, F))
nrow(x) // 4
ncol(x) // 2

// Name
x <- 1:3
names(x) <- c("first", "second", "third")

x <- list(a = 1, b = 2, c = 3)

m <- matrix(1:4, nrow = 2, ncol = 2)
dimnames(m) <- list(c("a", "b"), c("c", "d"))

// Subsetting
x <- c("a", "b", "c", "d")
x[1]
x[1:4]
x[x > "a"] // characters
u <- (x > "a") // booleans
x[u] // characters

x <- list(foo = 1:4, bar = 0.6)
x[1] // output with foo
x[[1]] // output without foo

x$bar // same
x[["bar"]] // same
$bar // same